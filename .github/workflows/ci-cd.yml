name: Build and Deploy Spring Boot JAR

on:
  push:
    branches: [ "bagas" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # Step 3: Build with Maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

      # Step 4: Upload artifact
      - name: Upload JAR
        uses: actions/upload-artifact@v3
        with:
          name: spring-boot-app
          path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 1: Download artifact
      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: spring-boot-app

      # Step 2: Deploy to Server using `.pem` file
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Create the app directory if it doesn't exist
            mkdir -p ~/app

            # Kill the existing application process if running
            pid=$(ps -ef | grep "lokakarya-be" | grep -v grep | awk '{print $2}')
            if [ ! -z "$pid" ]; then
              kill $pid
            fi

            # Copy the JAR file to the app directory
            mv spring-boot-app.jar ~/app/lokakarya-be.jar

            # Start the new application instance
            nohup java -jar ~/app/lokakarya-be.jar > ~/app/application.log 2>&1 &
