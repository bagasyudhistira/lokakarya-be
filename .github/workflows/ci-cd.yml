name: Build and Deploy Spring Boot App on Server

on:
  push:
    branches: [ "bagas" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Copy all repository files to the server
      - name: Deploy Files to Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "."
          target: "~/app"

      # Step 3: Compile and run the application on the server
      - name: Compile and Run Application on Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Navigate to the application directory
            cd ~/app
            
            # Export database environment variables
            export DATABASE_URL=${{ secrets.DATABASE_URL }}
            export DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
            export DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            
            # Kill the existing application process if running
            pid=$(ps -ef | grep "java -jar" | grep -v grep | awk '{print $2}')
            if [ ! -z "$pid" ]; then
              kill $pid
            fi
            
            # Clean and compile the project using Maven with database variables
            mvn clean package -DskipTests \
              -Dspring.datasource.url=$DATABASE_URL \
              -Dspring.datasource.username=$DATABASE_USERNAME \
              -Dspring.datasource.password=$DATABASE_PASSWORD
            
            # Run the compiled JAR with database variables
            nohup java -jar target/*.jar \
              --spring.datasource.url=$DATABASE_URL \
              --spring.datasource.username=$DATABASE_USERNAME \
              --spring.datasource.password=$DATABASE_PASSWORD \
              > application.log 2>&1 &
